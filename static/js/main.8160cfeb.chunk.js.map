{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","visiblePages","firstPage","lastPage","className","cn","disabled","href","onClick","map","page","active","anotherPage","items","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","length","maxItem","firstItem","lastItem","visibleItems","slice","id","value","onChange","event","target","selectedItemsPerPage","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAed,EAAW,EAAGW,GAC7BI,EAA4B,IAAhBN,EACZO,EAAWP,IAAgBE,EAoBjC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUJ,IAHhB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA/BS,WACVN,GACHL,EAAaD,EAAc,IAwBzB,oBAUDK,EAAaQ,KAAI,SAAAC,GAAI,OACpB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASd,IAHvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBApCC,SAACE,GACfA,IAASd,GACXC,EAAaa,GAkCQE,CAAYF,IAJ7B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUH,IAHhB,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QA5DS,WACVL,GACHN,EAAaD,EAAc,IAqDzB,wBC7EFiB,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBsB,EAApB,KACMxB,EAAQmB,EAAMM,OAEdC,EAAUxB,EAAcoB,EACxBK,EAAYD,EAAUJ,EAAe,EACrCM,EAAWF,EAAU1B,EAAQA,EAAQ0B,EAErCG,EAAeV,EAAMW,MAAMH,EAAY,EAAGC,GAahD,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCyB,EADjC,cACgDC,EADhD,eAC+D5B,EAD/D,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOV,EACPW,SAAU,SAAAC,GAAK,OA1BI,SAC3BA,GAEAX,GAAiBW,EAAMC,OAAOH,OAC9BR,EAAe,GAsBYY,CAAqBF,IAL1C,UAOE,wBAAQF,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASqB,EACTpB,YAAaA,EACbC,aApCa,SAACa,GAClBQ,EAAeR,MAsCZa,EAAad,KAAI,SAAAuB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,UClEfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8160cfeb.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const visiblePages = getNumbers(1, totalPages);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === totalPages;\n\n  const prevPage = () => {\n    if (!firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const anotherPage = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn(\n          'page-item',\n          { disabled: firstPage },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n      {visiblePages.map(page => (\n        <li\n          className={cn(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => anotherPage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn(\n          'page-item',\n          { disabled: lastPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPage}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const total = items.length;\n\n  const maxItem = currentPage * itemsPerPage;\n  const firstItem = maxItem - itemsPerPage + 1;\n  const lastItem = maxItem > total ? total : maxItem;\n\n  const visibleItems = items.slice(firstItem - 1, lastItem);\n\n  const selectedItemsPerPage = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const pageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={event => selectedItemsPerPage(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={pageChange}\n      />\n\n      {visibleItems.map(item => (\n        <li\n          data-cy=\"item\"\n          key={item}\n        >\n          {item}\n        </li>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}